# Doxyfile 1.9.1

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project.

# All text after a hash (#) is considered a comment and will be ignored.
# The format is:
#       TAG = value [value, ...]
# For lists items can also be appended using:
#       TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (" ").

#---------------------------------------------------------------------------

# Project related configuration options

#---------------------------------------------------------------------------

# The PROJECT_NAME tag is a single word (or a sequence of words surrounded
# by quotes) that should identify the project for which the documentation is
# generated. This name is used in the title of most generated pages and in
# a few other places.

PROJECT_NAME           = "s21_containers"

# The PROJECT_NUMBER tag can be used to enter a project or revision number.
# This could be handy for archiving the generated documentation or if some
# version control system is used.

PROJECT_NUMBER         = 1.0

# The PROJECT_BRIEF tag can be used to enter a short description of the project
# that is displayed at the top of each page and should give viewers a quick 
# idea about the purpose of the project. Keep the description short.

PROJECT_BRIEF          = "Implementation of custom containers in C++"

# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path
# into which the generated documentation will be written. If a relative path
# is entered, it will be relative to the location where doxygen was started.
# If left blank the current directory will be used.

OUTPUT_DIRECTORY       = docs

# The INPUT tag can be used to specify the files and/or directories that contain
# documented source files. You may enter file names like "myfile.cpp" or
# directories like "/usr/src/myproject". Separate the files or directories with
# spaces.

INPUT                  = 

# The RECURSIVE tag can be used to specify whether or not subdirectories should
# be searched for input files as well. Possible values are YES and NO. If left
# blank NO is used.

RECURSIVE              = YES

# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in 
# documentation are documented, even if no documentation was available. 
# If set to NO (the default) only documented entities will be included in the
# various indexes.

EXTRACT_ALL            = YES

# If the EXTRACT_PRIVATE tag is set to YES all private members of a class will 
# be included in the documentation.

EXTRACT_PRIVATE        = YES

# If the EXTRACT_STATIC tag is set to YES all static members of a file will be
# included in the documentation.

EXTRACT_STATIC         = YES

# The EXTRACT_LOCAL_CLASSES tag can be used to include local classes
# (classes defined in source files) in the documentation. If set to YES
# the local classes will be included, otherwise they will be excluded.

EXTRACT_LOCAL_CLASSES  = YES

# The EXTRACT_LOCAL_METHODS tag defines the scope of the local methods.
# If set to YES local methods will be included. If set to NO only
# the methods visible outside the scope are included.

EXTRACT_LOCAL_METHODS  = YES

# The EXTRACT_ANON_NSPACES tag can be used to enable extraction of
# anonymous namespaces (with no name) in the global scope.

EXTRACT_ANON_NSPACES   = YES

# The GENERATE_LATEX tag can be used to enable (YES) or disable (NO)
# the generation of LaTeX source files. These files can be processed 
# into a PDF using the pdflatex tool. 
# Note: To create a PDF from the LaTeX files doxygen generates you need 
# to have pdflatex installed. To create a PDF that looks exactly as the 
# HTML output does (with the same coloring, etc.) you also need to have 
# the texlive-latex-extra package installed (see www.doxygen.org/latex.html).

GENERATE_LATEX         = NO

# The HAVE_DOT tag can be used to specify whether the dot tool from the
# Graphviz package is available on the system. If it is set to YES (the default)
# dot will be used for generating inheritance diagrams for classes, collaboration
# diagrams, and interaction diagrams. If set to NO, dot will not be used at all.

HAVE_DOT               = YES

# The CLASS_DIAGRAMS tag can be used to create inheritance and collaboration
# diagrams for classes. If set to NO these diagrams will be omitted.

CLASS_DIAGRAMS         = YES

# The CALL_GRAPH and CALLER_GRAPH tags enable the generation of call and caller 
# graphs. If set to YES, the call/caller graphs will be generated.

CALL_GRAPH             = YES
CALLER_GRAPH           = YES

# The DIRECTORY_GRAPH, DOT_MULTI_TARGETS and DOT_CLEANUP tags are deprecated.

# The DOT_MULTI_TARGETS tag can be used to generate multiple .dot files
# from the sources, one for each graph type that is generated. By default,
# only a single dot file is generated.

DOT_MULTI_TARGETS      = YES

# The DOT_CLEANUP tag can be used to specify whether the intermediate
# dot files should be removed after processing. If set to YES (the default)
# the files will be removed, otherwise they will be left on disk.

DOT_CLEANUP            = YES
